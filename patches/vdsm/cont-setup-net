#!/usr/bin/env python

# TODO: integrate into vdsm-tool

import argparse
import logging
import sys

from vdsm.virt.containers import command
from vdsm.virt.containers import config
from vdsm.virt.containers import runtime


_DEFAULT_OVIRT_NET = 'ovirtmgmt'
_DEFAULT_OVIRT_NIC = 'eth1'
_DEFAULT_GW = '10.1.0.0'
_DEFAULT_SUBNET = '10.1.0.1'
_DEFAULT_MASK = 24


def _main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--name', type=str, nargs='?',
                        default=_DEFAULT_OVIRT_NET,
                        help='network name to use')
    parser.add_argument('--bridge', type=str, nargs='?',
                        default=_DEFAULT_OVIRT_NET,
                        help='bridge to use')
    parser.add_argument('--interface', type=str, nargs='?',
                        default=_DEFAULT_OVIRT_NIC,
                        help='interface to use')
    parser.add_argument('--gateway', type=str, nargs='?',
                        default=_DEFAULT_GW,
                        help='address of the gateway')
    parser.add_argument('--subnet', type=str, nargs='?',
                        default=_DEFAULT_SUBNET,
                        help='subnet to use')
    parser.add_argument('--mask', type=int, nargs='?',
                        default=_DEFAULT_MASK,
                        help='netmask to use')
    args = parser.parse_args()

    runtimes = runtime.supported()
    if not runtimes:
        logging.warning('no runtimes detected, nothing to do')
        return

    runtime.configure(
        command.Repo(),
        args.name,
        args.bridge,
        args.interface,
        args.gateway,
        args.subnet,
        args.mask
    )


if __name__ == "__main__":
    logging.basicConfig(level=logging.DEBUG)
    _main()
